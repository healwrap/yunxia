version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: yunxia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5001:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: registry.cn-hangzhou.aliyuncs.com/pepedd/yunxia:server-latest
    container_name: yunxia-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3005
      - BASE_URL=${BASE_URL}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - '3005:3005'

  client:
    image: registry.cn-hangzhou.aliyuncs.com/pepedd/yunxia:client-latest
    container_name: yunxia-client
    restart: unless-stopped
    depends_on:
      - server
    environment:
      - VITE_CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLISHABLE_KEY}
      - VITE_API_URL=/api
    ports:
      - '881:80'

volumes:
  postgres_data:
    driver: local
